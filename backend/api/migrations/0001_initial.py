# Generated by Django 5.2 on 2025-06-26 18:49

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Asignatura',
            fields=[
                ('id_asignatura', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
                ('curso', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Grado',
            fields=[
                ('id_grado', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
                ('url', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id_usuario', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
                ('apellidos', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('DNI', models.CharField(max_length=9, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'Usuario',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Comentario',
            fields=[
                ('id_comentario', models.AutoField(primary_key=True, serialize=False)),
                ('texto', models.TextField()),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('id_asignatura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.asignatura')),
                ('id_usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='asignatura',
            name='id_grado',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.grado'),
        ),
        migrations.CreateModel(
            name='EstadisticasAsignatura',
            fields=[
                ('id_estadisticasAsignatura', models.AutoField(primary_key=True, serialize=False)),
                ('anioAcademico', models.PositiveIntegerField()),
                ('num_matriculados', models.PositiveIntegerField()),
                ('aprobados', models.PositiveIntegerField()),
                ('suspensos', models.PositiveIntegerField()),
                ('no_presentados', models.PositiveIntegerField()),
                ('id_asignatura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.asignatura')),
            ],
            options={
                'verbose_name_plural': 'Estad√≠sticas de asignaturas',
                'constraints': [models.UniqueConstraint(fields=('id_asignatura', 'anioAcademico'), name='PK_estadistica')],
            },
        ),
        migrations.CreateModel(
            name='Favorito',
            fields=[
                ('id_favorito', models.AutoField(primary_key=True, serialize=False)),
                ('id_asignatura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.asignatura')),
                ('id_usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('id_asignatura', 'id_usuario'), name='PK_favorito')],
            },
        ),
    ]
