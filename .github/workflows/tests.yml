name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: tfguser
          POSTGRES_PASSWORD: tfgpassword
          POSTGRES_DB: tfgdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      USE_SQLITE: false
      POSTGRES_DB: tfgdb
      POSTGRES_USER: tfguser
      POSTGRES_PASSWORD: tfgpassword
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432

    steps:
      - uses: actions/checkout@v4

      # --Fronted

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run frontend tests with coverage
        working-directory: ./frontend
        run: npx vitest run --coverage --passWithNoTests

      - name: Upload frontend coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage-html
          path: frontend/coverage

      # --Backend

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run migrations
        working-directory: ./backend
        run: |
          python manage.py migrate

      - name: Run tests with coverage
        working-directory: ./backend
        run: |
          coverage run manage.py test

      - name: Show coverage summary
        working-directory: ./backend
        run: coverage report

      - name: Generate HTML coverage report
        working-directory: ./backend
        run: coverage html

      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v4
        with:
          name: cobertura-html
          path: backend/htmlcov
